implementation: customZNE 
circuit: U_4qubits
nb_qubits: 4
observable: Z
noise_factors:
  - 1
  - 3
  - 5
  - 7
  - 9
  # - 11
  # - 13
  # - 15
  # - 17
  # - 19
providers:
  - name: fake_provider
    backends: 
      - fake_nairobi
      # - fake_belem
  # - name: ibm_quantum_provider # test pour récupérer les backends des processeurs réels
  #   backends:
  #     - ibm_brisbane
  #     - ibm_osaka
  #     - ibm_kyoto
experiments:
  - boost_method: global_folding
    nb_shots: 
      - 1000
      # - 10000
      # - 100000
    extrapolations:
      - type: polynomial
        parameters: 
          degrees: 
            - 1
            - 2
            - 3
            # - 4 # Needs 5 data points because 4+1 coefficients in polynomial function (so need to use more than 4 circuits)
          p0: None
      # - type: richardson
      #   parameters:
      - type: exponential
      # - type: exponential-richardson
      #   parameters:
  - boost_method: local_folding
    nb_shots: 
      - 1000
    extrapolations:
      - type: polynomial
        parameters: 
          degrees: 
            - 1
            - 2
            - 3
            # - 4 # Needs 5 data points because 4+1 coefficients in polynomial function (so need to use more than 4 circuits)
          p0: None
      # - type: richardson
      #   parameters:
      - type: exponential
      # - type: exponential-richardson
      #   parameters:
